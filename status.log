2021-01-23 06:27 CET - Fixing memory leaks in OVar usage
2021-01-23 07:53 CET - adding tests

2021-01-23 14:47 CET - Debugging test failure, which seems to be a problem with OVar

2021-01-23 15:11 CET - Fixing bug: it's possible to elect two different leaders in the same term
Problem: term may change while replicating, and we end up sending AppendEntries for a term for which we're not leader.

2021-01-24 10:27 CET - Writing a basic test for log replication

2021-01-24 15:03 CET - Writing a basic test for replication

2021-01-24 15:07 CET - Investigating why tests are so slow (TS?)

2021-01-24 17:03 CET - Deciding whether to continue with log listener, or to set up more thorough test infrastructure.
At first I though about implementing DPOR, but now I think maybe a random scheduler would be enough to get started?
I think so - certainly we'll get more interleavings this way than with real timers.
With current message passing implementation we only need to mock out timers, so it should be easy.

2021-01-24 17:03 CET - Implementing scheduler

2021-01-24 20:28 CET - Implemented random scheduling, but there is a problem.
We can't test a simple scenario with a stable leader, because of course with random scheduling it's much more likely that a new election will take place.
This could be worked around by disabling the election timer for all but one node. That would be a neat pattern - to test "normal" behavior separately from failure cases.

2021-01-24 20:40 CET - Fixed the problem using the solution described above.
I admit I like the random scheduling solution. We're now able to run an iteration of the test in less than a millisecond.

2021-01-24 20:44 CET - There are several problems though:
- We're not testing if the timeout values make sense. In fact, we're totally ignoring them - any timer can fire at any time. This is good for safety testing, but not "normal operation" testing.
- We can't really use the passage of time. Maybe we could mock this based on the timers we fire?
- A bit hard to debug, tooling could be better. For example there's no way right now to view logs from only one test iteration.

2021-01-30 11:57 CET - Adding test for leader log completeness condition during election

2021-02-07 12:27 CET - Simpler test yet - does election even work with one disconnected node?

2021-02-14 15:18 CET - Simpler test - another attempt

2021-02-14 15:31 CET - Just implemented message drop as hanging indefinitely. But now the replication task will stop once there is any disruption. What to do?

2021-02-14 17:00 CET - Note to self: need to add another test: 'Can reelect a leader'

